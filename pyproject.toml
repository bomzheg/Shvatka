[tool.poetry]
name = "shvatka"
version = "1.0.0"
description = "Bot and Api for popular night puzzle hunt"
authors = ["Yuriy Chebyshev <bomzheg@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.scripts]
shvatka-tgbot = 'shvatka.tgbot.__main__:run'
shvatka-api = 'shvatka.api.__main__:run'

[tool.poetry.dependencies]
python = "~3.11"
wheel = "^0.38.4"
pyyaml = "^6.0"
python-dateutil = "^2.8.2"
colorlog = "^6.7.0"
aiogram = "3.2.*"
pydantic = "~2.5"
aiogram_dialog = "2.0.*"
sqlalchemy = { version = "^2.0", extras = ["asyncio"] }
alembic = "^1.10.0"
asyncpg = "^0.27.0"
ujson = "^5.5.0"
redis = "^5.0.1"
pyrogram = "^2.0.57"
dataclass_factory = "^2.16"
apscheduler = "^3.9.1"
fastapi = "~0.100"
uvicorn = "^0.20.0"
python-multipart = "^0.0.5"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = "^1.7.4"
bcrypt = "4.0.1"
telegraph = {extras = ["aio"], version = "^2.2.0"}
openpyxl = "^3.0.10"
lxml = "^4.9.2"
matplotlib = "^3.7.1"
greenlet = "<3.0.0"
prometheus-client = "^0.19.0"
dishka = "0.4.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
aiogram_dialog = {extras = ["tools"], version = "^2.0.0b12"}
locust = "^2.15.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.2.0"
pytest-ordering = "^0.6"
pytest-asyncio = "^0.18.3"
testcontainers = {extras = ["postgresql"], version = "^3.7.0"}
httpx = "^0.23.0"
coverage = {extras = ["toml"], version = "*"}
black = {version = "^22.12.0"}
ruff = "^0.2.1"
types-python-dateutil = "^2.8.19"
types-redis = "^4.3.21"
types-PyYAML = "^6.0.12"
lxml-stubs = "^0.4.0"
types-openpyxl = "*"
types-python-jose = "*"
types-passlib = "*"
mypy = "^1.1.1"
aiogram-tests = {git = "https://github.com/bomzheg/aiogram_tests.git", branch = "fix/aiogram3rc"}
asgi-lifespan = "^2.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
omit = [
    ".*",
    "*/site-packages/*",
    "shvatka/tgbot/*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 99
target-version = ['py310', 'py311']
include_trailing_comma = true
exclude = '''
(
    \.eggs
  | \.git
  | \.tox
  | build
  | dist
  | venv
  | docs
  | .idea
)
'''

[tool.ruff]
line-length = 99

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "RUF001", "S101", "D", "ANN101", "S311", "PD008", "UP035", "C408", "C417",
    "ANN102", "EM101", "TRY003", "PIE790", "RET505", "A003",  "EM102", "RUF003",
    "RET503", "RET502", "ARG005", "TCH003", "RUF002", "SIM108", "UP024", "ISC001",
    "FA102", "RUF015", "FIX002", "TD002", "TD003", "TD004", "TD005", "FA100",


    # fixme
    "ANN201", "SIM300", "COM812", "I001", "PLR0913", "UP015", "UP015", "B905",
    "RUF007", "ANN401", "ANN001", "PLR0911", "FBT001", "ANN002", "ANN003",
    "ARG002", "ARG001", "ANN204", "BLE001", "TRY400", "TCH001", "TCH002",
    "PGH003", "FBT002", "N818", "PLW2901", "RET504", "PLC1901", "RUF006",
    "FBT003", "SIM102", "S106", "PLR2004", "DTZ007", "ANN206", "PGH004",
    "TRY301", "ANN202", "SIM114",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = [
    "SLF001", "PLR2004", "PLR0913", "PT004", "PT023", "PT001",
    "PLR0915", "ARG001", "PTH123"  # fixme
]
"tests/**/conftest.py" = ["F811"]
"shvatka/api/*" = ["B008"]
"**/migrations/versions/*" = ["N999"]
"**/crawler/**parser/*" = ["PLR0912", "B904"]
"shvatka/infrastructure/db/models/*" = ["RUF012"]

[tool.mypy]
no_implicit_optional = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disable_error_code = ["union-attr", "arg-type"]

[[tool.mypy.overrides]]
module = "shvatka.infrastructure.di.*"
disable_error_code = ["call-overload"]

[[tool.mypy.overrides]]
module = "shvatka.tgbot.*"
disable_error_code = ["arg-type"]

[[tool.mypy.overrides]]
module = "shvatka.infrastructure.crawler.*"
disable_error_code = ["union-attr", "arg-type", "index", "misc", "assignment"]

[[tool.mypy.overrides]]
module = ["telegraph.*", "matplotlib.*", "aiogram_tests.*", "apscheduler.*", "testcontainers.*"]
ignore_missing_imports = true
