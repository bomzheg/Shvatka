from aiogram import F
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.kbd import Button, SwitchTo, Cancel
from aiogram_dialog.widgets.text import Const, Jinja, Multi

from shvatka.tgbot import states
from .getters import get_org, get_spy, get_keys
from .handlers import keys_handler

game_spy = Dialog(
    Window(
        Multi(
            Jinja(
                "–®–ø–∏–æ–Ω –∏–≥—Ä—ã <b>{{game.name}}</b> —Å ID {{game.id}}\n"
                "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: <b>{{game.status}}</b>\n"
                "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: "
            ),
            Jinja("{{ game.start_at|user_timezone }}", when=F["game"].start_at),
            Const("–Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞", when=~F["game"].start_at),
            sep="",
        ),
        SwitchTo(
            Const("üìä–¢–µ–∫—É—â–∏–µ —É—Ä–æ–≤–Ω–∏"),
            id="spy_levels",
            state=states.OrgSpySG.spy,
            when=F["org"].can_spy & F["game"].is_started,
        ),
        SwitchTo(
            Const("üîë–õ–æ–≥ –∫–ª—é—á–µ–π"),
            id="spy_keys",
            state=states.OrgSpySG.keys,
            when=F["game"].is_started & F["org"].can_see_log_keys,
        ),
        Cancel(Const("üîô–ù–∞–∑–∞–¥")),
        state=states.OrgSpySG.main,
        getter=get_org,
    ),
    Window(
        Const("–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è —Å –ø–æ–ª–µ–π —Å—Ö–≤–∞—Ç–∫–∏:"),
        Jinja(
            "{% for lt in stat %}"
            "{% if lt.is_finished %}"
            "üèÅ<b>{{ lt.team.name }}</b> - —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–ª–∞ –≤ "
            "{{ lt.start_at|time_user_timezone }} ({{(now - lt.start_at) | timedelta}} –Ω–∞–∑–∞–¥)\n"
            "{% else %}"
            "üö©<b>{{ lt.team.name }}</b> - —É—Ä {{ lt.level_number + 1 }} –Ω–∞—á–∞—Ç –≤ "
            "{{ lt.start_at|time_user_timezone }} ({{(now - lt.start_at) | timedelta}} –Ω–∞–∑–∞–¥)\n"
            "–ü–æ–¥—Å–∫–∞–∑–∫–∞ ‚Ññ{{lt.hint.number}} ‚Äî {{lt.hint.time}} –º–∏–Ω.\n"
            "{% endif %}"
            "{% endfor %}",
            when=F["org"].can_spy,
        ),
        Button(Const("üîÑ–û–±–Ω–æ–≤–∏—Ç—å"), id="refresh_spy"),
        SwitchTo(Const("üîô–ù–∞–∑–∞–¥"), id="back", state=states.OrgSpySG.main),
        state=states.OrgSpySG.spy,
        getter=(get_spy, get_org),
    ),
    Window(
        Jinja(
            "–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –ª–æ–≥ –∫–ª—é—á–µ–π \n"
            "–¥–ª—è –∏–≥—Ä—ã <b>{{game.name}}</b> "
            "(–Ω–∞—á–∞–ª–∞—Å—å –≤ {{game.start_at|user_timezone}}) \n"
            "{% if key_link %}"
            '–¥–æ—Å—Ç—É–ø–µ–Ω <a href="{{key_link}}">–ø–æ —Å—Å—ã–ª–∫–µ</a>\n'
            "–ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –Ω–∞ {{ updated | user_timezone }}"
            "{% else %}"
            "–ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ–ø—Ä–æ–±—É–π –æ–±–Ω–æ–≤–∏—Ç—å)"
            "{% endif %}"
        ),
        Button(Const("üîÑ–û–±–Ω–æ–≤–∏—Ç—å"), id="refresh_spy", on_click=keys_handler),
        SwitchTo(Const("üîô–ù–∞–∑–∞–¥"), id="back", state=states.OrgSpySG.main),
        state=states.OrgSpySG.keys,
        getter=(get_org, get_keys),
        disable_web_page_preview=True,
    ),
)
