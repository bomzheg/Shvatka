from aiogram import F
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import SwitchTo, Cancel, ScrollingGroup, Select, Button
from aiogram_dialog.widgets.text import Const, Jinja, Format

from shvatka.tgbot import states
from .getters import get_my_team_, get_team_with_players, get_selected_player
from .handlers import (
    rename_team_handler,
    change_desc_team_handler,
    select_player,
    change_permission_handler,
    remove_player_handler,
    change_role_handler,
    change_emoji_handler,
)

TEAM_PLAYER_CARD = Jinja(
    "–ò–≥—Ä–æ–∫ {{selected_player.name_mention}} —Å–ª—É–∂–∏—Ç –≤ –∫–æ–º–∞–Ω–¥–µ üö©{{team.name}} "
    "c {{selected_team_player.date_joined | user_timezone}}\n"
    "–°–µ–π—á–∞—Å –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ–ª–∂–Ω–æ—Å—Ç—å "
    "{{selected_team_player|player_emoji}}{{selected_team_player.role}}\n"
)


captains_bridge = Dialog(
    Window(
        Jinja(
            "–ö–∞–ø–∏—Ç–∞–Ω—Å–∫–∏–π –º–æ—Å—Ç–∏–∫.\n"
            "üö©–ö–æ–º–∞–Ω–¥–∞: <b>{{team.name}}</b>\n"
            "{% if team.description %}"
            "üìÉ–î–µ–≤–∏–∑: {{team.description}}\n"
            "{% endif %}"
            "{% if team.captain %}"
            "üëë–ö–∞–ø–∏—Ç–∞–Ω: {{team.captain.name_mention}}\n"
            "{% endif %}"
        ),
        Cancel(Const("üîô–ù–∞–∑–∞–¥")),
        SwitchTo(
            Const("‚úçÔ∏è–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å"),
            id="rename",
            state=states.CaptainsBridgeSG.name,
            when=F["team_player"].can_change_team_name,
        ),
        SwitchTo(
            Const("üìÉ–ò–∑–º–µ–Ω–∏—Ç—å –¥–µ–≤–∏–∑"),
            id="change_desc",
            state=states.CaptainsBridgeSG.description,
            when=F["team_player"].can_change_team_name,
        ),
        SwitchTo(
            Const("üë•–ò–≥—Ä–æ–∫–∏"),
            id="players",
            state=states.CaptainsBridgeSG.players,
            when=F["team_player"].can_manage_players | F["team_player"].can_remove_players,
        ),
        state=states.CaptainsBridgeSG.main,
        getter=get_my_team_,
    ),
    Window(
        Jinja("–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É üö©<b>{{team.name}}</b>"),
        SwitchTo(Const("üîô–ù–∞–∑–∞–¥"), id="back", state=states.CaptainsBridgeSG.main),
        TextInput(id="rename", on_success=rename_team_handler),
        getter=get_my_team_,
        state=states.CaptainsBridgeSG.name,
    ),
    Window(
        Jinja("–ò–∑–º–µ–Ω–∏—Ç—å –¥–µ–≤–∏–∑ –∫–æ–º–∞–Ω–¥—ã üö©<b>{{team.name}}</b>"),
        SwitchTo(Const("üîô–ù–∞–∑–∞–¥"), id="back", state=states.CaptainsBridgeSG.main),
        TextInput(id="change_desc", on_success=change_desc_team_handler),
        getter=get_my_team_,
        state=states.CaptainsBridgeSG.description,
    ),
    Window(
        Jinja("–ò–≥—Ä–æ–∫–∏ –∫–æ–º–∞–Ω–¥—ã üö©<b>{{team.name}}</b>"),
        SwitchTo(Const("üîô–ù–∞–∑–∞–¥"), id="back", state=states.CaptainsBridgeSG.main),
        ScrollingGroup(
            Select(
                Jinja("{{item|player_emoji}}{{item.player.name_mention}}"),
                id="players",
                item_id_getter=lambda x: x.player.id,
                items="players",
                on_click=select_player,
            ),
            id="players_sg",
            width=1,
            height=10,
        ),
        getter=get_team_with_players,
        state=states.CaptainsBridgeSG.players,
    ),
    Window(
        TEAM_PLAYER_CARD,
        SwitchTo(Const("‚§¥–í –º–µ–Ω—é –∫–æ–º–∞–Ω–¥—ã"), id="to_main", state=states.CaptainsBridgeSG.main),
        SwitchTo(Const("üîô–ù–∞–∑–∞–¥"), id="back", state=states.CaptainsBridgeSG.players),
        Button(
            Format("{can_manage_waivers}–ü–æ–¥–∞–≤–∞—Ç—å –≤–µ–π–≤–µ—Ä—ã"),
            id="can_manage_waivers",
            on_click=change_permission_handler,
            when=F["team_player"].can_manage_players & F["team_player"].can_manage_waivers,
        ),
        Button(
            Format("{can_manage_players}–£–ø—Ä–∞–≤–ª—è—Ç—å –∏–≥—Ä–æ–∫–∞–º–∏"),
            id="can_manage_players",
            on_click=change_permission_handler,
            when=F["team_player"].can_manage_players,
        ),
        Button(
            Format("{can_change_team_name}–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É"),
            id="can_change_team_name",
            on_click=change_permission_handler,
            when=F["team_player"].can_manage_players & F["team_player"].can_change_team_name,
        ),
        Button(
            Format("{can_add_players}–î–æ–±–∞–≤–ª—è—Ç—å –∏–≥—Ä–æ–∫–æ–≤"),
            id="can_add_players",
            on_click=change_permission_handler,
            when=F["team_player"].can_manage_players & F["team_player"].can_add_players,
        ),
        Button(
            Format("{can_remove_players}–£–¥–∞–ª—è—Ç—å –∏–≥—Ä–æ–∫–æ–≤"),
            id="can_remove_players",
            on_click=change_permission_handler,
            when=F["team_player"].can_manage_players & F["team_player"].can_remove_players,
        ),
        SwitchTo(
            Const("–ò–∑–º–µ–Ω–∏—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å"),
            id="to_role",
            state=states.CaptainsBridgeSG.player_role,
            when=F["team_player"].can_manage_players,
        ),
        SwitchTo(
            Const("–ò–∑–º–µ–Ω–∏—Ç—å emoji"),
            id="to_emoji",
            state=states.CaptainsBridgeSG.player_emoji,
            when=F["team_player"].can_manage_players,
        ),
        SwitchTo(
            Const("–ò–∑–≥–Ω–∞—Ç—å"),
            id="delete",
            state=states.CaptainsBridgeSG.confirm_delete,
            when=F["team_player"].can_remove_players,
        ),
        getter=get_selected_player,
        state=states.CaptainsBridgeSG.player,
    ),
    Window(
        TEAM_PLAYER_CARD,
        Const(
            "–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–≥–Ω–∞—Ç—å –µ–≥–æ –∏–∑ –∫–æ–º–∞–Ω–¥—ã?",
        ),
        SwitchTo(Const("‚§¥–í –º–µ–Ω—é –∫–æ–º–∞–Ω–¥—ã"), id="to_main", state=states.CaptainsBridgeSG.main),
        SwitchTo(
            Const("‚§¥–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∏–≥—Ä–æ–∫–æ–≤"),
            id="to_players",
            state=states.CaptainsBridgeSG.players,
        ),
        SwitchTo(Const("–ù–µ—Ç!"), id="back", state=states.CaptainsBridgeSG.player),
        Button(Const("–î–∞, —É–¥–∞–ª–∏—Ç—å"), id="delete", on_click=remove_player_handler),
        getter=get_selected_player,
        state=states.CaptainsBridgeSG.confirm_delete,
    ),
    Window(
        TEAM_PLAYER_CARD,
        Const("–ö–∞–∫—É—é —Ä–æ–ª—å –µ–º—É –Ω—É–∂–Ω–æ –ø—Ä–∏—Å–≤–æ–∏—Ç—å?"),
        TextInput(
            id="role_changer",
            on_success=change_role_handler,
        ),
        SwitchTo(Const("‚§¥–í –º–µ–Ω—é –∫–æ–º–∞–Ω–¥—ã"), id="to_main", state=states.CaptainsBridgeSG.main),
        SwitchTo(
            Const("‚§¥–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∏–≥—Ä–æ–∫–æ–≤"),
            id="to_players",
            state=states.CaptainsBridgeSG.players,
        ),
        getter=get_selected_player,
        state=states.CaptainsBridgeSG.player_role,
    ),
    Window(
        TEAM_PLAYER_CARD,
        Const("–ö–∞–∫–æ–π emoji –¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–µ—Ä–µ–¥ –µ–≥–æ –Ω–∏–∫–æ–º?"),
        TextInput(
            id="emoji_changer",
            on_success=change_emoji_handler,
        ),
        SwitchTo(Const("‚§¥–í –º–µ–Ω—é –∫–æ–º–∞–Ω–¥—ã"), id="to_main", state=states.CaptainsBridgeSG.main),
        SwitchTo(
            Const("‚§¥–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∏–≥—Ä–æ–∫–æ–≤"),
            id="to_players",
            state=states.CaptainsBridgeSG.players,
        ),
        getter=get_selected_player,
        state=states.CaptainsBridgeSG.player_emoji,
    ),
)
